/*
 * Traffic Simulator
 *
 * Copyright (C) 2018, Ajuntament de Sant Feliu de Llobregat
 *
 * This program is licensed and may be used, modified and redistributed under
 * the terms of the European Public License (EUPL), either version 1.1 or (at
 * your option) any later version as soon as they are approved by the European
 * Commission.
 *
 * Alternatively, you may redistribute and/or modify this program under the
 * terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either  version 3 of the License, or (at your option)
 * any later version.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the licenses for the specific language governing permissions, limitations
 * and more details.
 *
 * You should have received a copy of the EUPL1.1 and the LGPLv3 licenses along
 * with this program; if not, you may find them at:
 *
 *   https://joinup.ec.europa.eu/software/page/eupl/licence-eupl
 *   http://www.gnu.org/licenses/
 *   and
 *   https://www.gnu.org/licenses/lgpl.txt
 */
package org.santfeliu.trafsim;

import java.awt.Cursor;
import java.io.File;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;
import org.santfeliu.trafsim.io.GMLWriter;

/**
 *
 * @author realor
 */
public class ExportDialog extends javax.swing.JDialog
{
  /**
   * Creates new form ExportDialog
   */
  public ExportDialog(java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints;

    centerPanel = new javax.swing.JPanel();
    layerLabel = new javax.swing.JLabel();
    layerComboBox = new javax.swing.JComboBox<>();
    diskPanel = new javax.swing.JPanel();
    pathLabel = new javax.swing.JLabel();
    pathTextField = new javax.swing.JTextField();
    exploreButton = new javax.swing.JButton();
    southPanel = new javax.swing.JPanel();
    exportButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/santfeliu/trafsim/resources/TrafficSimulator"); // NOI18N
    setTitle(bundle.getString("dialog.export.title")); // NOI18N
    setMinimumSize(new java.awt.Dimension(600, 200));

    centerPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4));
    centerPanel.setLayout(new java.awt.GridBagLayout());

    layerLabel.setText(bundle.getString("dialog.export.layer")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    centerPanel.add(layerLabel, gridBagConstraints);

    layerComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Graph", "Locations", "Vehicles" }));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    centerPanel.add(layerComboBox, gridBagConstraints);

    diskPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    diskPanel.setLayout(new java.awt.GridBagLayout());

    pathLabel.setText(bundle.getString("dialog.export.path")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    diskPanel.add(pathLabel, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    diskPanel.add(pathTextField, gridBagConstraints);

    exploreButton.setText(bundle.getString("dialog.export.explore")); // NOI18N
    exploreButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        exploreButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    diskPanel.add(exploreButton, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    centerPanel.add(diskPanel, gridBagConstraints);

    getContentPane().add(centerPanel, java.awt.BorderLayout.CENTER);

    exportButton.setText(bundle.getString("dialog.export.export")); // NOI18N
    exportButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        exportButtonActionPerformed(evt);
      }
    });
    southPanel.add(exportButton);

    cancelButton.setText(bundle.getString("dialog.cancel")); // NOI18N
    cancelButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        cancelButtonActionPerformed(evt);
      }
    });
    southPanel.add(cancelButton);

    getContentPane().add(southPanel, java.awt.BorderLayout.PAGE_END);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
  {//GEN-HEADEREND:event_cancelButtonActionPerformed
    dispose();
  }//GEN-LAST:event_cancelButtonActionPerformed

  private void exportButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exportButtonActionPerformed
  {//GEN-HEADEREND:event_exportButtonActionPerformed
    TrafficSimulator simulator = (TrafficSimulator)getParent();
    final Simulation simulation = simulator.getSimulation();
    try
    {
      String layerName = (String)layerComboBox.getSelectedItem();
      Layer layer;
      if (layerName.equals("Locations"))
      {
        layer = simulation.getLocations();
      }
      else if (layerName.equals("Vehicles"))
      {
        layer = simulation.getVehicles();
      }
      else
      {
        layer = simulation.getRoadGraph();
      }
      setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
      String path = pathTextField.getText();
      File file = new File(path);
      GMLWriter writer = new GMLWriter(new FileOutputStream(file));
      writer.setLayerName(layerName);
      writer.setSrsName(simulation.getSrsName());
      writer.write(layer.getFeatures());
      setCursor(Cursor.getDefaultCursor());
      dispose();
    }
    catch (Exception ex)
    {
      setCursor(Cursor.getDefaultCursor());
      simulator.showError(this, "Export", ex);
    }
  }//GEN-LAST:event_exportButtonActionPerformed

  private void exploreButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exploreButtonActionPerformed
  {//GEN-HEADEREND:event_exploreButtonActionPerformed
    JFileChooser chooser = new JFileChooser();
    int result = chooser.showDialog(this, "Select");
    if (result == JFileChooser.APPROVE_OPTION)
    {
      pathTextField.setText(chooser.getSelectedFile().getAbsolutePath());
    }
  }//GEN-LAST:event_exploreButtonActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton cancelButton;
  private javax.swing.JPanel centerPanel;
  private javax.swing.JPanel diskPanel;
  private javax.swing.JButton exploreButton;
  private javax.swing.JButton exportButton;
  private javax.swing.JComboBox<String> layerComboBox;
  private javax.swing.JLabel layerLabel;
  private javax.swing.JLabel pathLabel;
  private javax.swing.JTextField pathTextField;
  private javax.swing.JPanel southPanel;
  // End of variables declaration//GEN-END:variables
}
